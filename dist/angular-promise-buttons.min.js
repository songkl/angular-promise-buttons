angular.module("angularPromiseButtons",[]),angular.module("angularPromiseButtons").run(["$templateCache",function(a){"use strict";a.put("promise-btn-d.html","<button ng-transclude></button>")}]),angular.module("angularPromiseButtons").directive("promiseBtn",["angularPromiseButtons",function(a){"use strict";return{restrict:"EA",transclude:!0,replace:!0,scope:{promiseBtn:"=",text:"@",promiseBtnSuccess:"@",promiseBtnError:"@",promiseBtnLoading:"@"},templateUrl:"promise-btn-d.html",link:function(b,c){var d=a.config,e=function(a){a&&(c.html("<span>"+a+"</span>"),c.append(d.spinnerTpl))};c.append(d.spinnerTpl),b._baseHtml=c.html();var f=function(a){b.promiseBtnLoading?e(b.promiseBtnLoading):c.html(b._baseHtml),d.btnLoadingClass&&c.addClass(d.btnLoadingClass),d.disableBtn&&c.attr("disabled","disabled"),a.then(function(){c.addClass(d.successClass),e(b.promiseBtnSuccess)})["catch"](function(){c.addClass(d.errorClass),e(b.promiseBtnError),setTimeout(function(){c.html(b._baseHtml)},1200)})},g=function(){d.btnLoadingClass&&c.removeClass(d.btnLoadingClass),d.disableBtn&&c.removeAttr("disabled")};b.$watch(function(){return b.promiseBtn},function(a){a&&a.then&&(f(a),a["finally"](g))})}}}]),angular.module("angularPromiseButtons").provider("angularPromiseButtons",function(){"use strict";var a={spinnerTpl:'<span class="btn-spinner"></span>',disableBtn:!0,btnLoadingClass:"is-loading",btnLoadedClass:"loaded",successClass:"success",errorClass:"error"};return{extendConfig:function(b){a=angular.extend(a,b)},$get:function(){return{config:a}}}});